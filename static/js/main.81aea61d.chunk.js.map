{"version":3,"sources":["modules/common/redux.helpers.js","modules/movie-browser/movie-browser.service.js","modules/movie-browser/movie-browser.action.js","modules/movie-browser/movie-page/movie-page.service.js","modules/movie-browser/movie-page/movie-page.action.js","modules/movie-browser/movie-page/movie-page.reducers.js","modules/movie-browser/movie-browser.reducers.js","modules/movie-browser/movie-card/movie-card.actions.js","store/index.js","constants/index.js","components/NavigationBar.js","components/swiper.js","modules/movie-browser/movie-browser.helpers.js","modules/common/scroll.helpers.js","modules/movie-browser/movie-card/movie-card.component.js","modules/common/loader.component.js","modules/movie-browser/movie-list/movie-list.component.js","modules/movie-browser/movie-modal/movie-modal.container.js","modules/movie-browser/movie-modal/movie-modal.dummy.js","modules/movie-browser/movie-browser.container.js","modules/movie-browser/movie-browser.movies.container.js","components/Home.js","components/Movies.js","modules/movie-browser/movie-browser.tvshows.container.js","components/TVSeries.js","modules/movie-browser/movie-browser.topimdb.container.js","components/TopIMDB.js","modules/movie-browser/movie-browser.trending.container.js","components/Trending.js","modules/movie-browser/movie-page/movie-page.comments.js","modules/movie-browser/movie-page/movie-page.moviepage.js","modules/movie-browser/movie-page/movie-page.container.js","components/Page.js","modules/movie-browser/movie-search/movie-search.container.js","components/Search.js","components/App.js","serviceWorker.js","index.js"],"names":["createReducer","initialState","actionHandleKeyFuncs","state","action","actionHandler","type","createAction","actionProps","console","log","createAsyncActionCreator","actionType","asyncRequestFunc","requestParams","dispatch","request","then","response","json","catch","error","initialAsyncState","isLoading","createAsyncReducer","actionHandlerKeyFuncs","Object","keys","startReducerFun","successReducerFun","errorReducerFun","createMovieUrl","relativeUrl","queryParams","baseUrl","forEach","paramName","getTopMovies","a","async","page","fullUrl","fetch","searchMovies","query","searchSeries","getMovieDetails","movieId","media_type","movieFullUrl","movieInfoData","getTVDetails","TVId","TVFullUrl","TVInfoData","getTrending","getLatestMovies","getLatestTVShows","GET_TOP_MOVIES","SEARCH_MOVIES","CLOSE_MOVIE_DETAILS","GET_TRENDING","GET_LATEST_MOVIES","GET_LATEST_TVSHOWS","GET_MOVIE_DETAILS","GET_TV_DETAILS","SEARCH_SERIES","movieService","closeDetails","getDetails","fetchSimilarMovies","fetchMovieVideos","fetchMovieComments","fetchMovieCredits","GET_MOVIE_VIDEOS","GET_SIMILAR_MOVIES","GET_MOVIE_COMMENTS","GET_MOVIE_CREDITS","getMovieVideos","getSimilarMovies","getMovieComments","getMovieCredits","moviePageReducer","movieActionKeys","isOpen","results","combinedMovieDetailsReducers","combineReducers","details","videos","similar","comments","credits","movieSuccessReducer","existingMovies","searchMovieTV","movieSearch","seriesSearch","SERIES_MOVIES","movieBrowserReducer","topMoviesReducer","searchResponse","movieDetails","moviePage","OPEN_MOVIE_PAGE","rootReducer","movieBrowser","loggerMiddleware","createLogger","store","createStore","undefined","compose","applyMiddleware","thunkMiddleware","top100Films","title","year","styles","titleButton","marginLeft","back","backgroundColor","height","content","display","paddingLeft","searchBox","paddingTop","paddingRight","width","withRouter","props","className","style","id","href","to","Autocomplete","size","options","getOptionLabel","option","renderInput","params","TextField","variant","label","placeholder","fullWidth","onKeyPress","ev","key","window","location","target","value","preventDefault","memo","children","TMDB_IMAGE_BASE_URL","updateMoviePictureUrls","movieResult","backdrop_path","poster_path","getMoviesList","moviesResponse","map","getScroolDownPercentage","pageHeight","document","documentElement","scrollHeight","clientHeight","pageYOffset","cardMedia","maxHeight","overflow","card","cursor","bgImage","cardTitle","fontFamily","fontSize","cardDiv","MovieCardComponent","isMouseOver","this","movie","subtitle","overview","movie_id","currentRoute","pathname","param1","Card","onMouseOver","setState","onMouseLeave","onClick","mt","overlay","Typography","gutterBottom","color","paddingBottom","src","React","Component","connect","refreshStyle","position","margin","LoaderComponent","top","left","status","movieColumn","marginBottom","MovieListComponent","movies","movieCols","Col","xs","sm","md","lg","Row","dialogContent","backgroundUrl","backgroundImage","backgroundRepeat","backgroundSize","minHeight","padding","buttonContent","buttonDiv","MovieModalContainer","openDetails","movieOpen","movieHelpers","genres","genre","name","join","autoScrollBoduContent","modal","open","onRequestClose","budget","_","get","pageStyle","MovieBrowser","handlePageClick","data","loadPage","selected","currenPage","currentPage","currentMovies","showModal","offset","elements","perPage","pageCount","topMovies","scrollHelpers","nextPage","actions","movieModal","modalLoad","paginationElement","previousLabel","nextLabel","breakLabel","onPageChange","forcePage","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","Grid","movieActions","Movies","TVBrowser","TVSeries","MovieTopIMDB","TopIMDB","MoviesTrending","Trending","CommentsComp","commentsDiv","comment","ListItem","alignItems","ListItemAvatar","Avatar","alt","ListItemText","primary","Fragment","component","fontWeight","author","secondary","Divider","List","movieContainer","videoOptions","float","dooplayPlayerH2","background","playeroption","lineHeight","mveImg","borderRadius","mveName","marginTop","heading","linkText","videoContainer","MoviePage","urlPlay","movieImg","playClicked","similarMovies","movieTitle","movieOverview","rating","releasedate","imdb_id","cr1","cr2","video","detailsLoading","commentsLoading","videoLoading","similarLoading","creditsLoading","mveCast","mveCrew","videosDiv","movieImgLinkFull","videoDefaultPlay","loader","release_date","genreinfo","indexOf","length","substring","movieImgLink","vote_average","videoInfo","videoKey","videoId","videoType","typeName","site","class","cast","cst","crew","crw","job","url","playing","dooplayPlayer","playerotionsul","Paper","container","spacing","item","direction","Link","autoplay","autopalySpeed","pauseOnHover","parseInt","movie_params","Page","match","SearchPage","series","Search","searchKey","App","exact","path","render","Boolean","hostname","ReactDom","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81aea61d.chunk.js","sourcesContent":["//Helper function which enables passing an object with action.type as key\r\n// reducer function as value\r\n\r\nexport const createReducer = (initialState={},actionHandleKeyFuncs={}) => {\r\n    return (state=initialState, action) => {\r\n        const actionHandler = actionHandleKeyFuncs[action.type]\r\n        return actionHandler ? actionHandler(state,action) : state;\r\n    }\r\n};\r\n\r\n//Create a basic action \r\nexport const createAction =(type, actionProps) => {\r\n    console.log(`Create Action ${type} of action has been created and Props are ${actionProps}`)\r\n    return {\r\n        type,\r\n        ...actionProps\r\n    };\r\n}\r\n\r\n//eg createAsyncActionCreator('GET_TOP_MOVIES',getTopMovies,{page:1})\r\n\r\nexport const createAsyncActionCreator = (actionType, asyncRequestFunc, requestParams) => {\r\n    console.log(`REDUX HELPERS : createAsyncActionCreator ${actionType}`)\r\n    return (dispatch) => {\r\n        console.log(`Dispatching  ${actionType}_START`)\r\n        dispatch(createAction(`${actionType}_START`,{request:requestParams}));\r\n        // NOTE : asyncRequestFunc must accept single object parameter\r\n        return asyncRequestFunc(requestParams)\r\n                .then(response => {\r\n                    response.json()\r\n                    .then(json => dispatch(createAction(`${actionType}_SUCCESS`,{response: json})))\r\n                    .catch(error => dispatch(createAction(`${actionType}_ERROR`,{error})))\r\n                })\r\n                \r\n                \r\n    }\r\n}\r\n\r\nconst initialAsyncState = { isLoading: false, response : null, request : null};\r\n\r\n//Generic way of handling state changes for an async request\r\nexport const createAsyncReducer = (actionType, actionHandlerKeyFuncs={}, initialState=initialAsyncState ) => {\r\n    console.log(`REDUX HELPER : createAsyncReducer - action type ${actionType} actionHandlerKeyFuncs ${Object.keys(actionHandlerKeyFuncs)}  initialState ${Object.keys(initialState)} ${initialState.isLoading} ${initialState.response} ${initialState.request}`)\r\n    const startReducerFun = (state, action) => ({\r\n        ...state,\r\n        isLoading: true,\r\n        request : action.request\r\n    });\r\n\r\n    const successReducerFun = (state,action) => ({\r\n        ...state,\r\n        isLoading : false,\r\n        response : action.response \r\n    });\r\n\r\n    const errorReducerFun = (state,action) => ({\r\n        ...state,\r\n        isLoading : false,\r\n        error : action.error\r\n    })\r\n\r\n    return createReducer (\r\n        initialState,\r\n        {\r\n            [`${actionType}_START`]: startReducerFun,\r\n            [`${actionType}_SUCCESS`]: successReducerFun,\r\n            [`${actionType}_ERROR`]: errorReducerFun,\r\n            ...actionHandlerKeyFuncs\r\n        }\r\n    ) \r\n}","const MOVIE_DB_API_KEY = '0038ed1d5237a83984bbd343e436425f';\r\nconst MOVIE_DB_BASE_URL = 'https://api.themoviedb.org/3';\r\n\r\nexport const createMovieUrl = (relativeUrl, queryParams) => {\r\n    let baseUrl = `${MOVIE_DB_BASE_URL}${relativeUrl}?api_key=${MOVIE_DB_API_KEY}&language=en-US`;\r\n    if(queryParams){\r\n        Object.keys(queryParams)\r\n            .forEach(paramName=>baseUrl += `&${paramName}=${queryParams[paramName]}`);\r\n    }\r\n\r\n    return baseUrl;\r\n}\r\n\r\n\r\n//service functions which makes request to the endpoints\r\n\r\nexport const getTopMovies = async ({page}) => {\r\n    const fullUrl = createMovieUrl('/movie/top_rated',{\r\n        page\r\n    });\r\n\r\n    console.log(`MOVIEBROWSER.SERVICE . Fetching url ${fullUrl} `)\r\n\r\n    return fetch(fullUrl);\r\n}\r\n\r\nexport const searchMovies = async({page,query}) => {\r\n    const fullUrl = createMovieUrl('/search/movie',{\r\n        page,\r\n        query\r\n    });\r\n\r\n    return fetch(fullUrl);\r\n}\r\n\r\nexport const searchSeries = async({page,query}) => {\r\n    const fullUrl = createMovieUrl('/search/movie',{\r\n        page,\r\n        query\r\n    });\r\n\r\n    return fetch(fullUrl);\r\n}\r\n\r\nexport const getMovieDetails = async({movieId,media_type}) => {\r\n    let  movieFullUrl = ''\r\n    if (media_type === \"movie\") {  movieFullUrl = createMovieUrl(`/movie/${movieId}`)} else{ movieFullUrl = createMovieUrl(`/tv/${movieId}`);}\r\n    \r\n    const movieInfoData = fetch(movieFullUrl)\r\n\r\n    console.log(`MOVIEBROWSER.SERVICE . Fetching url getMovieDetails movieInfo${movieFullUrl} `)\r\n\r\n    return movieInfoData;\r\n}\r\n\r\nexport const getTVDetails = async({TVId}) => {\r\n    const TVFullUrl = createMovieUrl(`/TV/${TVId}`);\r\n    const TVInfoData = fetch(TVFullUrl)\r\n\r\n    console.log(`MOVIEBROWSER.SERVICE . Fetching url getTVDetails TVInfo${TVInfoData} `)\r\n\r\n    return TVInfoData;\r\n}\r\n\r\nexport const getTrending = async({page,query}) => {\r\n    const fullUrl = createMovieUrl('/trending/all/day',{\r\n        page\r\n    });\r\n\r\n    console.log(`MOVIEBROWSER.SERVICE . Fetching url ${fullUrl} `)\r\n\r\n    return fetch(fullUrl);\r\n}\r\n\r\nexport const getLatestMovies = async({page,query}) => {\r\n    const fullUrl = createMovieUrl('/movie/now_playing',{\r\n        page\r\n    });\r\n\r\n    console.log(`MOVIEBROWSER.SERVICE . Fetching url ${fullUrl} `)\r\n\r\n    return fetch(fullUrl);\r\n}\r\n\r\nexport const getLatestTVShows = async({page,query}) => {\r\n    const fullUrl = createMovieUrl('/tv/on_the_air',{\r\n        page\r\n    });\r\n\r\n    console.log(`MOVIEBROWSER.SERVICE . Fetching url ${fullUrl} `)\r\n\r\n    return fetch(fullUrl);\r\n}\r\n\r\nexport const fetchSimilarMovies = async({movieId}) => {\r\n    const fullUrl = createMovieUrl(`/movie/${movieId}/similar`)\r\n\r\n    return fetch(fullUrl)\r\n}\r\n\r\nexport const fetchMovieVideos = async({movieId,media_type}) => {\r\n    const fullUrl = createMovieUrl(`/movie/${movieId}/video`)\r\n\r\n    return fetch(fullUrl)\r\n}\r\n\r\n\r\nexport const fetchMovieComments = async({movieId}) => {\r\n    const fullUrl = createMovieUrl(`/movie/${movieId}/reviews`)\r\n\r\n    return fetch(fullUrl)\r\n}\r\n","import {\r\n  createAsyncActionCreator,\r\n  createAction,\r\n} from \"../common/redux.helpers\";\r\nimport * as movieService from \"./movie-browser.service\";\r\n\r\nexport const keys = {\r\n  GET_TOP_MOVIES: \"GET_TOP_MOVIES\",\r\n  SEARCH_MOVIES: \"SEARCH_MOVIES\",\r\n  CLOSE_MOVIE_DETAILS: \"CLOSE_MOVIE_DETAILS\",\r\n  GET_TRENDING: \"GET_TRENDING\",\r\n  GET_LATEST_MOVIES: \"GET_LATEST_MOVIES\",\r\n  GET_LATEST_TVSHOWS: \"GET_LATEST_TVSHOWS\",\r\n  GET_MOVIE_DETAILS: \"GET_MOVIE_DETAILS\",\r\n  GET_TV_DETAILS: \"GET_TV_DETAILS\",\r\n  SEARCH_SERIES: \"SEARCH_SERIES\",\r\n};\r\n\r\n//********** ACTION CREATORS ******************* */\r\n//********** THESE ACTION CREATORS NEEDS TO BE DISPATCHED FROM THE COMPONENTS ************8//\r\n\r\nexport const getTopMovies = (page) =>\r\n  createAsyncActionCreator(\r\n    //actionType\r\n    keys.GET_TOP_MOVIES,\r\n    //requestFn\r\n    movieService.getTopMovies,\r\n    //requestParams\r\n    { page }\r\n  );\r\n\r\nexport const searchMovies = (query, page) =>\r\n  createAsyncActionCreator(keys.SEARCH_MOVIES, movieService.searchMovies, {\r\n    query,\r\n    page,\r\n  });\r\n\r\nexport const closeDetails = () => createAction(keys.CLOSE_MOVIE_DETAILS);\r\n\r\nexport const getTrending = (page) =>\r\n  createAsyncActionCreator(keys.GET_TRENDING, movieService.getTrending, {\r\n    page,\r\n  });\r\n\r\nexport const getLatestMovies = (page) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_LATEST_MOVIES,\r\n    movieService.getLatestMovies,\r\n    { page }\r\n  );\r\n\r\nexport const getLatestTVShows = (page) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_LATEST_TVSHOWS,\r\n    movieService.getLatestTVShows,\r\n    { page }\r\n  );\r\n\r\nexport const getDetails = (movieId, media_type) => {\r\n  media_type === \"movie\"\r\n    ? createAsyncActionCreator(\r\n        keys.GET_MOVIE_DETAILS,\r\n        movieService.getMovieDetails,\r\n        { movieId }\r\n      )\r\n    : createAsyncActionCreator(keys.GET_TV_DETAILS, movieService.getTVDetails, {\r\n        movieId,\r\n      });\r\n};\r\n\r\nexport const searchSeries = (query, page) =>\r\n  createAsyncActionCreator(keys.SEARCH_SERIES, movieService.searchSeries, {\r\n    query,\r\n    page,\r\n  });\r\n","import { createMovieUrl } from \"../movie-browser.service\";\r\n\r\nexport const getMovieDetails = async ({ movieId }) => {\r\n  const movieFullUrl = createMovieUrl(`/movie/${movieId}`);\r\n  const movieInfoData = fetch(movieFullUrl);\r\n\r\n  console.log(\r\n    `MOVIEBROWSER.SERVICE . Fetching url getMovieDetails movieInfo${movieFullUrl} `\r\n  );\r\n\r\n  return movieInfoData;\r\n};\r\n\r\nexport const getTVDetails = async ({ TVId }) => {\r\n  const TVFullUrl = createMovieUrl(`/TV/${TVId}`);\r\n  const TVInfoData = fetch(TVFullUrl);\r\n\r\n  console.log(\r\n    `MOVIEBROWSER.SERVICE . Fetching url getTVDetails TVInfo${TVInfoData} `\r\n  );\r\n\r\n  return TVInfoData;\r\n};\r\n\r\nexport const fetchSimilarMovies = async ({ movieId }) => {\r\n  const fullUrl = createMovieUrl(`/movie/${movieId}/similar`);\r\n  console.log(\r\n    `MOVIEBROWSER.SERVICE . Fetching url fetchSimilarMovies movieInfo${fullUrl} `\r\n  );\r\n  return fetch(fullUrl);\r\n};\r\n\r\nexport const fetchMovieVideos = async ({ movieId }) => {\r\n  const fullUrl = createMovieUrl(`/movie/${movieId}/videos`);\r\n  console.log(\r\n    `MOVIEBROWSER.SERVICE . Fetching url fetchMovieVideos movieInfo${fullUrl} `\r\n  );\r\n  return fetch(fullUrl);\r\n};\r\n\r\nexport const fetchMovieComments = async ({ movieId }) => {\r\n  const fullUrl = createMovieUrl(`/movie/${movieId}/reviews`);\r\n  console.log(\r\n    `MOVIEBROWSER.SERVICE . Fetching url fetchMovieComments movieInfo${fullUrl} `\r\n  );\r\n  return fetch(fullUrl);\r\n};\r\n\r\nexport const fetchMovieCredits = async ({ movieId }) => {\r\n  const fullUrl = createMovieUrl(`/movie/${movieId}/credits`);\r\n  console.log(\r\n    `MOVIEBROWSER.SERVICE . Fetching url fetchMovieCredits movieInfo${fullUrl} `\r\n  );\r\n  return fetch(fullUrl);\r\n};\r\n","import {\r\n  createAsyncActionCreator,\r\n  createAction,\r\n} from \"../../common/redux.helpers\";\r\nimport * as movieService from \"./movie-page.service\";\r\n\r\nexport const keys = {\r\n  GET_MOVIE_DETAILS: \"GET_MOVIE_DETAILS\",\r\n  GET_MOVIE_VIDEOS: \"GET_MOVIE_VIDEOS\",\r\n  GET_SIMILAR_MOVIES: \"GET_SIMILAR_MOVIES\",\r\n  GET_MOVIE_COMMENTS: \"GET_MOVIE_COMMENTS\",\r\n  GET_MOVIE_CREDITS: \"GET_MOVIE_CREDITS\",\r\n};\r\n\r\n//********** ACTION CREATORS ******************* */\r\n//********** THESE ACTION CREATORS NEEDS TO BE DISPATCHED FROM THE COMPONENTS ************8//\r\n\r\nexport const getDetails = (movieId, media_type) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_MOVIE_DETAILS,\r\n    movieService.getMovieDetails,\r\n    { movieId, media_type }\r\n  );\r\nexport const closeDetails = () => createAction(keys.CLOSE_MOVIE_DETAILS);\r\n\r\nexport const getMovieVideos = (movieId, media_type) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_MOVIE_VIDEOS,\r\n    movieService.fetchMovieVideos,\r\n    { movieId, media_type }\r\n  );\r\n\r\nexport const getSimilarMovies = (movieId, media_type) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_SIMILAR_MOVIES,\r\n    movieService.fetchSimilarMovies,\r\n    { movieId }\r\n  );\r\n\r\nexport const getMovieComments = (movieId, media_type) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_MOVIE_COMMENTS,\r\n    movieService.fetchMovieComments,\r\n    { movieId }\r\n  );\r\n\r\nexport const getMovieCredits = (movieId, media_type) =>\r\n  createAsyncActionCreator(\r\n    keys.GET_MOVIE_CREDITS,\r\n    movieService.fetchMovieCredits,\r\n    { movieId }\r\n  );\r\n","import {combineReducers} from 'redux';\r\nimport { createReducer, createAsyncReducer } from '../../common/redux.helpers'\r\nimport {keys as movieActionKeys } from './movie-page.action'\r\n\r\nconst moviePageReducer = (state,action) => {\r\n    console.log(`MOVIEBROWSER : movieDetailsSuccessReducer stateis ${Object.keys(state)} actionis ${action}  `)\r\n    \r\n    switch(action.type){\r\n        case `${movieActionKeys.GET_MOVIE_DETAILS}_SUCCESS`:\r\n        case `${movieActionKeys.GET_MOVIE_CREDITS}_SUCCESS`:\r\n            return {\r\n                ...state,\r\n                isOpen : true,\r\n                isLoading : false,\r\n                response\r\n                 : {\r\n                    results : [\r\n                        action.response\r\n                    ]\r\n                } \r\n            }\r\n            break;\r\n        case `${movieActionKeys.GET_MOVIE_VIDEOS}_SUCCESS`      :\r\n        case `${movieActionKeys.GET_SIMILAR_MOVIES}_SUCCESS`    :\r\n        case `${movieActionKeys.GET_MOVIE_COMMENTS}_SUCCESS`    :\r\n            return {\r\n                ...state,\r\n                isOpen : true,\r\n                isLoading : false,\r\n                response\r\n                 : {\r\n                    results : [\r\n                        ...action.response.results\r\n                    ]\r\n                } \r\n            }\r\n            break;\r\n    }\r\n           \r\n}\r\n\r\nexport const combinedMovieDetailsReducers = combineReducers({\r\n    details : createAsyncReducer(movieActionKeys.GET_MOVIE_DETAILS,{\r\n        [`${movieActionKeys.GET_MOVIE_DETAILS}_SUCCESS`] : moviePageReducer,\r\n    }),\r\n    videos : createAsyncReducer(movieActionKeys.GET_MOVIE_VIDEOS,{\r\n        [`${movieActionKeys.GET_MOVIE_VIDEOS}_SUCCESS`] : moviePageReducer,\r\n    }),\r\n    similar : createAsyncReducer(movieActionKeys.GET_SIMILAR_MOVIES,{\r\n        [`${movieActionKeys.GET_SIMILAR_MOVIES}_SUCCESS`] : moviePageReducer,\r\n    }),\r\n    comments : createAsyncReducer(movieActionKeys.GET_MOVIE_COMMENTS,{\r\n        [`${movieActionKeys.GET_MOVIE_COMMENTS}_SUCCESS`] : moviePageReducer,\r\n    }),\r\n    credits : createAsyncReducer(movieActionKeys.GET_MOVIE_CREDITS,{\r\n        [`${movieActionKeys.GET_MOVIE_CREDITS}_SUCCESS`] : moviePageReducer,\r\n    }),\r\n})","import {combineReducers} from 'redux';\r\nimport { createReducer, createAsyncReducer } from '../common/redux.helpers'\r\nimport {keys as movieActionKeys } from './movie-browser.action'\r\nimport {keys as moviePageKeys} from './movie-card/movie-card.actions'\r\nimport {combinedMovieDetailsReducers} from './movie-page/movie-page.reducers'\r\n\r\nconsole.log(\"Reducer\")\r\n\r\nconst movieSuccessReducer = (state,action) => {\r\n    const existingMovies = state.response ? state.response.results : []\r\n    console.log(`MOVIEBROWSER : moviesuccessReducer stateis ${Object.keys(state)} actionis ${action} existingMovies ${existingMovies} `)\r\n    return {\r\n        ...state,\r\n        isLoading : false,\r\n        response\r\n         : {\r\n            results : [\r\n                ...action.response.results\r\n            ]\r\n        } \r\n    }\r\n}\r\n\r\nconst moviePageSuccessReducer = (state,action) => {\r\n    return {\r\n        ...state,\r\n        isLoading : false,\r\n        isOpen : true,\r\n        movieId : action.movieId\r\n    }\r\n}\r\n\r\nconst searchMovieTV = combineReducers({\r\n    movieSearch :  createAsyncReducer(movieActionKeys.SEARCH_MOVIES,{\r\n        [`${movieActionKeys.SEARCH_MOVIES}_SUCCESS`] : movieSuccessReducer\r\n    }),\r\n    seriesSearch :  createAsyncReducer(movieActionKeys.SERIES_MOVIES,{\r\n        [`${movieActionKeys.SERIES_MOVIES }_SUCCESS`] : movieSuccessReducer\r\n    }),\r\n})\r\n\r\n\r\n\r\nconsole.log(\"MOVIEBROWSER.REDUCER creating reducer movieBrowserReducer\" )\r\n\r\nconst movieBrowserReducer = combineReducers({\r\n\r\n    topMoviesReducer : createAsyncReducer(movieActionKeys.GET_TOP_MOVIES, {\r\n        [`${movieActionKeys.GET_TOP_MOVIES}_SUCCESS`] : movieSuccessReducer,\r\n        [`${movieActionKeys.GET_TRENDING}_SUCCESS`] : movieSuccessReducer,\r\n        [`${movieActionKeys.GET_LATEST_MOVIES}_SUCCESS`] : movieSuccessReducer,\r\n        [`${movieActionKeys.GET_LATEST_TVSHOWS}_SUCCESS`] : movieSuccessReducer\r\n    }),\r\n    searchResponse : searchMovieTV,\r\n    movieDetails: combinedMovieDetailsReducers,\r\n    moviePage : createReducer(moviePageKeys.OPEN_MOVIE_PAGE,{\r\n        [`${movieActionKeys.OPEN_MOVIE_PAGE}`] : moviePageSuccessReducer\r\n    })\r\n});\r\n\r\nexport default movieBrowserReducer;\r\n","export const keys = {\r\n    'OPEN_MOVIE_PAGE' : 'OPEN_MOVIE_PAGE',\r\n    'OPEN_EPISODE_PAGE' :'OPEN_EPISODE_PAGE'\r\n}\r\n\r\n//Two action creators to open and close the movie modal\r\nexport const openMoviePage = (movieId) => {\r\n    console.log(`MOVIEPAGE ACTIONS : movieId ${movieId}`)\r\n    return{\r\n        type : 'OPEN_MOVIE_PAGE',\r\n        movieId\r\n    };\r\n};\r\n\r\nexport const openEpisodePage = (episodeId) => {\r\n    console.log(`MOVIEPAGE ACTIONS : episodeId ${episodeId}`)\r\n    return{\r\n        type : 'OPEN_EPISODE_PAGE',\r\n        episodeId\r\n    };\r\n};","import { applyMiddleware, createStore,combineReducers,compose} from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {createLogger} from 'redux-logger'\r\nimport movieBrowserReducer from '../modules/movie-browser/movie-browser.reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    movieBrowser : movieBrowserReducer\r\n});\r\n\r\n// to log details about prev state , action details etc\r\nconst loggerMiddleware = createLogger();\r\nconsole.log(\"Creating Store\")\r\nconst store = createStore(\r\n    //reducer\r\n    rootReducer,\r\n    //preloadState\r\n    undefined,\r\n    compose(\r\n        applyMiddleware(\r\n            //Thunk allows functions to be returned from action creators so we can do actions like dispatch multiple actions\r\n            //in a single action creator fro async\r\n            thunkMiddleware,\r\n            loggerMiddleware\r\n        )\r\n    )\r\n);\r\n\r\nconsole.log(\"Store created\");\r\nexport default store;"," const top100Films = [\r\n    { title: 'The Shawshank Redemption', year: 1994 },\r\n    { title: 'The Godfather', year: 1972 },\r\n    { title: 'The Godfather: Part II', year: 1974 },\r\n    { title: 'The Dark Knight', year: 2008 },\r\n    { title: '12 Angry Men', year: 1957 },\r\n    { title: \"Schindler's List\", year: 1993 },\r\n    { title: 'Pulp Fiction', year: 1994 },\r\n    { title: 'The Lord of the Rings: The Return of the King', year: 2003 },\r\n    { title: 'The Good, the Bad and the Ugly', year: 1966 },\r\n    { title: 'Fight Club', year: 1999 },\r\n    { title: 'The Lord of the Rings: The Fellowship of the Ring', year: 2001 },\r\n    { title: 'Star Wars: Episode V - The Empire Strikes Back', year: 1980 },\r\n    { title: 'Forrest Gump', year: 1994 },\r\n    { title: 'Inception', year: 2010 },\r\n    { title: 'The Lord of the Rings: The Two Towers', year: 2002 },\r\n    { title: \"One Flew Over the Cuckoo's Nest\", year: 1975 },\r\n    { title: 'Goodfellas', year: 1990 },\r\n    { title: 'The Matrix', year: 1999 },\r\n    { title: 'Seven Samurai', year: 1954 },\r\n    { title: 'Star Wars: Episode IV - A New Hope', year: 1977 },\r\n    { title: 'City of God', year: 2002 },\r\n    { title: 'Se7en', year: 1995 },\r\n    { title: 'The Silence of the Lambs', year: 1991 },\r\n    { title: \"It's a Wonderful Life\", year: 1946 },\r\n    { title: 'Life Is Beautiful', year: 1997 },\r\n    { title: 'The Usual Suspects', year: 1995 },\r\n    { title: 'Léon: The Professional', year: 1994 },\r\n    { title: 'Spirited Away', year: 2001 },\r\n    { title: 'Saving Private Ryan', year: 1998 },\r\n    { title: 'Once Upon a Time in the West', year: 1968 },\r\n    { title: 'American History X', year: 1998 },\r\n    { title: 'Interstellar', year: 2014 },\r\n    { title: 'Casablanca', year: 1942 },\r\n    { title: 'City Lights', year: 1931 },\r\n    { title: 'Psycho', year: 1960 },\r\n    { title: 'The Green Mile', year: 1999 },\r\n    { title: 'The Intouchables', year: 2011 },\r\n    { title: 'Modern Times', year: 1936 },\r\n    { title: 'Raiders of the Lost Ark', year: 1981 },\r\n    { title: 'Rear Window', year: 1954 },\r\n    { title: 'The Pianist', year: 2002 },\r\n    { title: 'The Departed', year: 2006 },\r\n    { title: 'Terminator 2: Judgment Day', year: 1991 },\r\n    { title: 'Back to the Future', year: 1985 },\r\n    { title: 'Whiplash', year: 2014 },\r\n    { title: 'Gladiator', year: 2000 },\r\n    { title: 'Memento', year: 2000 },\r\n    { title: 'The Prestige', year: 2006 },\r\n    { title: 'The Lion King', year: 1994 },\r\n    { title: 'Apocalypse Now', year: 1979 },\r\n    { title: 'Alien', year: 1979 },\r\n    { title: 'Sunset Boulevard', year: 1950 },\r\n    { title: 'Dr. Strangelove or: How I Learned to Stop Worrying and Love the Bomb', year: 1964 },\r\n    { title: 'The Great Dictator', year: 1940 },\r\n    { title: 'Cinema Paradiso', year: 1988 },\r\n    { title: 'The Lives of Others', year: 2006 },\r\n    { title: 'Grave of the Fireflies', year: 1988 },\r\n    { title: 'Paths of Glory', year: 1957 },\r\n    { title: 'Django Unchained', year: 2012 },\r\n    { title: 'The Shining', year: 1980 },\r\n    { title: 'WALL·E', year: 2008 },\r\n    { title: 'American Beauty', year: 1999 },\r\n    { title: 'The Dark Knight Rises', year: 2012 },\r\n    { title: 'Princess Mononoke', year: 1997 },\r\n    { title: 'Aliens', year: 1986 },\r\n    { title: 'Oldboy', year: 2003 },\r\n    { title: 'Once Upon a Time in America', year: 1984 },\r\n    { title: 'Witness for the Prosecution', year: 1957 },\r\n    { title: 'Das Boot', year: 1981 },\r\n    { title: 'Citizen Kane', year: 1941 },\r\n    { title: 'North by Northwest', year: 1959 },\r\n    { title: 'Vertigo', year: 1958 },\r\n    { title: 'Star Wars: Episode VI - Return of the Jedi', year: 1983 },\r\n    { title: 'Reservoir Dogs', year: 1992 },\r\n    { title: 'Braveheart', year: 1995 },\r\n    { title: 'M', year: 1931 },\r\n    { title: 'Requiem for a Dream', year: 2000 },\r\n    { title: 'Amélie', year: 2001 },\r\n    { title: 'A Clockwork Orange', year: 1971 },\r\n    { title: 'Like Stars on Earth', year: 2007 },\r\n    { title: 'Taxi Driver', year: 1976 },\r\n    { title: 'Lawrence of Arabia', year: 1962 },\r\n    { title: 'Double Indemnity', year: 1944 },\r\n    { title: 'Eternal Sunshine of the Spotless Mind', year: 2004 },\r\n    { title: 'Amadeus', year: 1984 },\r\n    { title: 'To Kill a Mockingbird', year: 1962 },\r\n    { title: 'Toy Story 3', year: 2010 },\r\n    { title: 'Logan', year: 2017 },\r\n    { title: 'Full Metal Jacket', year: 1987 },\r\n    { title: 'Dangal', year: 2016 },\r\n    { title: 'The Sting', year: 1973 },\r\n    { title: '2001: A Space Odyssey', year: 1968 },\r\n    { title: \"Singin' in the Rain\", year: 1952 },\r\n    { title: 'Toy Story', year: 1995 },\r\n    { title: 'Bicycle Thieves', year: 1948 },\r\n    { title: 'The Kid', year: 1921 },\r\n    { title: 'Inglourious Basterds', year: 2009 },\r\n    { title: 'Snatch', year: 2000 },\r\n    { title: '3 Idiots', year: 2009 },\r\n    { title: 'Monty Python and the Holy Grail', year: 1975 },\r\n  ];\r\n\r\n  export default top100Films;","import React, { Component } from \"react\";\r\nimport { Link, NavLink, withRouter } from \"react-router-dom\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport top100Films from \"../constants\";\r\nconst NavigationBar = (props) => {\r\n  return (\r\n    <nav className=\"nav-wrapper\" style={styles.back}>\r\n      <div id=\"logo\">\r\n        <a\r\n          className=\"brand-logo\"\r\n          href\r\n          title=\"Watch online movies for free\"\r\n          style={styles.titleButton}\r\n        >\r\n          {\" \"}\r\n          Smovies{\" \"}\r\n        </a>\r\n      </div>\r\n      <div style={styles.content}>\r\n        <ul className=\"right\">\r\n          {/*<li><Link to=\"/\">Home</Link></li>*/}\r\n          <li>\r\n            <Link to=\"/Trending\">Trending</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/Movies\">Movies</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/TVSeries\">TVSeries</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/TopIMDB\">TopIMDB</Link>\r\n          </li>\r\n          <li>\r\n            <Autocomplete\r\n              id=\"size-small-outlined\"\r\n              size=\"small\"\r\n              options={top100Films}\r\n              getOptionLabel={(option) => option.title}\r\n              style={styles.searchBox}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  variant=\"outlined\"\r\n                  label=\"Search for movies...\"\r\n                  placeholder=\"Favorites\"\r\n                  fullWidth\r\n                  onKeyPress={(ev) => {\r\n                    if (ev.key === \"Enter\") {\r\n                      const { href } = window.location;\r\n                      window.location.href = `/search/${ev.target.value}`;\r\n                      ev.target.value = \"\";\r\n                      ev.preventDefault();\r\n                    }\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  titleButton: {\r\n    marginLeft: 30,\r\n  },\r\n  back: {\r\n    backgroundColor: \"#26243F\",\r\n    height: 85,\r\n  },\r\n  content: {\r\n    display: \"inline-block\",\r\n    paddingLeft: 180,\r\n  },\r\n  searchBox: {\r\n    marginLeft: 400,\r\n    paddingTop: 8,\r\n    paddingRight: 10,\r\n    width: 300,\r\n  },\r\n};\r\n\r\nexport default withRouter(NavigationBar);\r\n","import React, { memo } from \"react\";\nimport ReactIdswiper from \"react-id-swiper\";\n\nexport default memo(({ children, params }) => (\n  <ReactIdswiper {...params}>{children}</ReactIdswiper>\n));\n","\r\nconst TMDB_IMAGE_BASE_URL = (width = 300) => `https://image.tmdb.org/t/p/w${width}`;\r\n\r\nexport const updateMoviePictureUrls = (movieResult, width = 300) => ({\r\n  ...movieResult,\r\n  backdrop_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.backdrop_path}`,\r\n  poster_path: `${TMDB_IMAGE_BASE_URL(width)}${movieResult.poster_path}`,\r\n});\r\n\r\nexport const getMoviesList = (moviesResponse) => {\r\n  return !!moviesResponse ? ([\r\n    ...moviesResponse.results.map(movieResult => updateMoviePictureUrls(movieResult))\r\n  ]) : null;\r\n}\r\n","export const getScroolDownPercentage = (window) => {\r\n    const pageHeight = window.document.documentElement.scrollHeight;\r\n    const clientHeight = window.document.documentElement.clientHeight;\r\n    const scrollPos = window.pageYOffset;\r\n    const currentPosition = scrollPos + clientHeight;\r\n    const percentageScrolled = currentPosition/pageHeight;\r\n    return percentageScrolled;\r\n}\r\n\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card } from \"@material-ui/core\";\r\nimport { CardTitle, CardMedia } from \"material-ui\";\r\nimport {\r\n  getDetails,\r\n  getMovieVideos,\r\n  getSimilarMovies,\r\n  getMovieComments,\r\n  getMovieCredits,\r\n} from \"../movie-page/movie-page.action\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = {\r\n  cardMedia: {\r\n    maxHeight: 394,\r\n    overflow: \"hidden\",\r\n  },\r\n  card: {\r\n    cursor: \"pointer\",\r\n    height: 200,\r\n    width: 150,\r\n    overflow: \"hidden\",\r\n  },\r\n  bgImage: {\r\n    width: \"100%\",\r\n  },\r\n  cardTitle: {\r\n    fontFamily: \"Roboto\",\r\n    fontSize: \"50px\",\r\n  },\r\n  cardDiv: {\r\n    paddingLeft: 20,\r\n  },\r\n};\r\n\r\nclass MovieCardComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isMouseOver: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      movie,\r\n      getDetails,\r\n      getMovieVideos,\r\n      getSimilarMovies,\r\n      getMovieComments,\r\n      getMovieCredits,\r\n    } = this.props;\r\n    const subtitle = this.state.isMouseOver ? movie.overview : null;\r\n    const movie_id = movie.id;\r\n    let media_type = movie.media_type;\r\n    const currentRoute = window.location.pathname;\r\n    return (\r\n      <div>\r\n        <Link\r\n          to={{\r\n            pathname:\r\n              currentRoute === \"/TVSeries\"\r\n                ? `/tv/${movie_id}`\r\n                : `/movie/${movie_id}`,\r\n            param1: \"MovieId\",\r\n          }}\r\n        >\r\n          <Card\r\n            style={styles.card}\r\n            onMouseOver={() => this.setState({ isMouseOver: true })}\r\n            onMouseLeave={() => this.setState({ isMouseOver: false })}\r\n            onClick={() => {\r\n              let mt = \"\";\r\n              currentRoute === \"/TVSeries\" ? (mt = \"tv\") : (mt = \"movie\");\r\n\r\n              getDetails(movie_id, (media_type = mt));\r\n              getMovieVideos(movie_id, (media_type = mt));\r\n              getSimilarMovies(movie_id, (media_type = mt));\r\n              getMovieComments(movie_id, (media_type = mt));\r\n              getMovieCredits(movie_id, (media_type = mt));\r\n            }}\r\n          >\r\n            <CardMedia\r\n              style={styles.cardMedia}\r\n              overlay={\r\n                <CardTitle\r\n                  style={styles.cardTitle}\r\n                  title={\r\n                    <Typography\r\n                      gutterBottom\r\n                      variant=\"h5\"\r\n                      style={{ color: \"#00acc1\", paddingBottom: \"5px\" }}\r\n                    >\r\n                      {movie.title}\r\n                    </Typography>\r\n                  }\r\n                  subtitle={<Typography color=\"#FFFFFF\">{subtitle}</Typography>}\r\n                />\r\n              }\r\n            >\r\n              <img style={styles.bgImage} src={movie.poster_path} />\r\n            </CardMedia>\r\n          </Card>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(() => ({}), {\r\n  getDetails,\r\n  getMovieVideos,\r\n  getSimilarMovies,\r\n  getMovieComments,\r\n  getMovieCredits,\r\n})(MovieCardComponent);\r\n","import React from 'react'\r\nimport _ from 'lodash';\r\nimport {RefreshIndicator} from 'material-ui'\r\n\r\nconst styles = {\r\n    refreshStyle : {\r\n        position : 'relative',\r\n        display : 'block',\r\n        margin : '0 auto'\r\n    }\r\n};\r\n\r\nconst LoaderComponent = ({isLoading, children}) => {\r\n    if(isLoading){\r\n        return (\r\n            <RefreshIndicator\r\n            style = {styles.refreshStyle}\r\n            top={0}\r\n            left={0}\r\n            size={80}\r\n            status={'loading'}\r\n            />\r\n        )\r\n    }\r\n\r\n    //render nothing if no children is present\r\n    return children ? children : null;\r\n}\r\n\r\nexport default LoaderComponent;","import React from 'react'\r\nimport {Row,Col} from 'react-bootstrap'\r\nimport MovieCard from '../movie-card/movie-card.component'\r\nimport LoaderComponent from '../../common/loader.component'\r\n\r\nconst styles = {\r\n    movieColumn : {\r\n        marginBottom : 20\r\n    }\r\n}\r\n\r\nconst MovieListComponent = ({movies,isLoading}) => {\r\n    const movieCols = movies ? movies.map(movie => (\r\n        <Col style={styles.movieColumn} key={movie.id} xs={12} sm={4} md={3} lg={3}>\r\n            <MovieCard  movie={movie} />\r\n        </Col>\r\n    )) : null;\r\n\r\n    return (\r\n        <Row>\r\n            {movieCols}\r\n            <LoaderComponent isLoading={isLoading} />\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MovieListComponent;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Dialog} from 'material-ui';\r\nimport _ from 'lodash';\r\nimport { closeDetails } from '../movie-browser.action';\r\nimport * as movieHelpers from '../movie-browser.helpers';\r\n\r\nconst styles = {\r\n    // Can use functions to dynamically build our CSS\r\n    dialogContent: (backgroundUrl) => ({\r\n      backgroundImage: `linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(${backgroundUrl})`,\r\n      backgroundRepeat: 'no-repeat',\r\n      backgroundSize: '100%',\r\n      height: '100%',\r\n      minHeight: 400,\r\n      color: 'white',\r\n      padding: 10\r\n    }),\r\n    buttonContent : {   \r\n        backgroundColor: \"#21b6ae\",\r\n        padding: \"18px 206px\",\r\n        fontSize: \"18px\"\r\n    },\r\n    buttonDiv : {\r\n      padding : \"50px 250px 0px  \"\r\n    }\r\n  }\r\n\r\n  class MovieModalContainer extends React.Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state ={\r\n        movieOpen : false\r\n      }\r\n\r\n    }\r\n     \r\n    //This is triggered right after receiving the props\r\n\r\n      openDetails=() => {\r\n        this.setState({\r\n          movieOpen: true\r\n        })\r\n      }\r\n      render(){\r\n\r\n        const {isOpen, closeDetails, isLoading } = this.props;\r\n        console.log(`The movie in modal is ${Object.keys(this.props.movie)}`)\r\n        const movie = movieHelpers.updateMoviePictureUrls(this.props.movie);\r\n        const genres = movie && movie.genres ? movie.genres.map(genre => genre.name).join(\",\") : \"\";\r\n\r\n        return(\r\n          <div>\r\n            <Dialog \r\n                autoScrollBoduContent= {true}\r\n                title={null}\r\n                modal={false}\r\n                open={isOpen}\r\n                onRequestClose={closeDetails}\r\n            >                \r\n              <div style={styles.dialogContent(movie.backdrop_path)}>\r\n                  <h1>{movie.title}</h1>\r\n                  <h5>{genres}</h5>\r\n                  <p>{movie.overview}</p>\r\n                  <p>Budget : {(movie.budget===0) ? 'Not available' : `$ ${movie.budget}`}</p>\r\n                  <div  style={styles.buttonDiv}>\r\n                                                                 \r\n                  </div>\r\n              </div>                \r\n            </Dialog>\r\n            \r\n            </div>\r\n        );\r\n      }\r\n  }\r\n\r\n\r\n  export default connect(\r\n      (state) => {\r\n        console.log(`Keys in state in movie modal ${Object.keys(state)}`)  \r\n        return {\r\n          isOpen        : _.get(state,'movieBrowser.movieDetails.isOpen',false),\r\n          movie         : _.get(state,'movieBrowser.movieDetails.response.results[0]',{}),\r\n          isLoading     : _.get(state,'movieBrowser.movieDetails.isLoading',false)\r\n      }},\r\n      //Map an action to a prop, ready to be dispatched\r\n      { closeDetails } \r\n  )(MovieModalContainer);","import React from 'react'\r\n\r\nclass Dummy extends React.Component {\r\n  render(){\r\n    return (\r\n      <h1>Dummy </h1>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Dummy;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid,Row,Col} from 'react-bootstrap';\r\nimport {AppBar, TextField, RaisedButton} from 'material-ui';\r\nimport * as movieActions from './movie-browser.action';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport MovieModalContainer from './movie-modal/movie-modal.container';\r\nimport DummyModal from './movie-modal/movie-modal.dummy';\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst     styles = {\r\n    pageStyle: {\r\n        paddingLeft: 400\r\n    }\r\n}\r\n\r\nclass MovieBrowser extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage : 1,\r\n            currentMovies:[],\r\n            showModal : false,\r\n            offset:0,\r\n            data:[],\r\n            elements : [],\r\n            perPage : 32,\r\n            pageCount:20   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //window.onscroll = this.scrollHandle;\r\n        \r\n        console.log(`Component Did mount`)\r\n        console.log(`mounting currentpage ${this.state.currentPage}`)\r\n        this.props.getTopMovies(this.state.currentPage);\r\n        this.setState({\r\n            showModal :true\r\n        })\r\n    }\r\n\r\n    scrollHandle() {\r\n        const {topMovies} = this.props;\r\n        if(!topMovies.isLoading){\r\n            let percentageScrolled = scrollHelpers.getScroolDownPercentage(window);\r\n            if(percentageScrolled > .8){\r\n                const nextPage = this.state.currentPage + 1;\r\n                this.props.getTopMovies(nextPage);\r\n                this.setState({currentPage: nextPage});\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePageClick =(data) => {\r\n        const selectedPage = data.selected;\r\n        const loadPage = selectedPage + 1;\r\n        this.props.getTopMovies(loadPage);\r\n        this.setState({currenPage:loadPage})\r\n        console.log(`The selected Page is ${loadPage}` )\r\n    }\r\n\r\n\r\n    render(){\r\n        const actions =  this.props;\r\n        console.log(`MOVIEBROWSER CONTAINER : Reciev props withh keys  ${Object.keys(actions)}`)\r\n        const movieModal = actions.movieDetails;\r\n        let modalLoad = movieModal.isOpen\r\n        console.log(`movieModal ${movieModal.isOpen}`)\r\n        const topMovies = actions.topMovies\r\n        const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n        let paginationElement;\r\n        \r\n        paginationElement = (\r\n            <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            breakLabel={<span className=\"gap\">...</span>}\r\n            pageCount={this.state.pageCount}\r\n            onPageChange={this.handlePageClick}\r\n            forcePage={this.state.currentPage-1}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"previous_page\"}\r\n            nextLinkClassName={\"next_page\"}\r\n            disabledClassName={\"disabled\"}\r\n            activeClassName={\"active\"}\r\n            />\r\n        );\r\n       \r\n\r\n        return(\r\n        <div className=\"homePage\">\r\n            <div className=\"pageNumber\" style={styles.pageStyle}>\r\n            {paginationElement}\r\n            {this.state.elements}\r\n            </div>\r\n            <Grid>\r\n                <Row>   \r\n                    <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n                </Row>\r\n            </Grid>\r\n            {modalLoad ? <MovieModalContainer /> : console.log(\"Error loading modal\")}\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    //Map nodes in state to properties in component\r\n    (state) => ({\r\n        topMovies : state.movieBrowser.topMoviesReducer,\r\n        movieDetails : state.movieBrowser.movieDetails\r\n    }),\r\n\r\n    //Map action creators to props in component\r\n    {...movieActions}\r\n)(MovieBrowser);","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid,Row,Col} from 'react-bootstrap';\r\nimport {AppBar, TextField, RaisedButton} from 'material-ui';\r\nimport * as movieActions from './movie-browser.action';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport MovieModalContainer from './movie-modal/movie-modal.container';\r\nimport DummyModal from './movie-modal/movie-modal.dummy';\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst     styles = {\r\n    pageStyle: {\r\n        paddingLeft: 400\r\n    }\r\n}\r\n\r\nclass MovieBrowser extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage : 1,\r\n            currentMovies:[],\r\n            showModal : false,\r\n            offset:0,\r\n            data:[],\r\n            elements : [],\r\n            perPage : 32,\r\n            pageCount:20   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //window.onscroll = this.scrollHandle;\r\n        \r\n        console.log(`Component Did mount`)\r\n        console.log(`mounting currentpage ${this.state.currentPage}`)\r\n        this.props.getLatestMovies(this.state.currentPage);\r\n        this.setState({\r\n            showModal :true\r\n        })\r\n    }\r\n\r\n    scrollHandle() {\r\n        const {topMovies} = this.props;\r\n        if(!topMovies.isLoading){\r\n            let percentageScrolled = scrollHelpers.getScroolDownPercentage(window);\r\n            if(percentageScrolled > .8){\r\n                const nextPage = this.state.currentPage + 1;\r\n                this.props.getLatestMovies(nextPage);\r\n                this.setState({currentPage: nextPage});\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePageClick =(data) => {\r\n        const selectedPage = data.selected;\r\n        const loadPage = selectedPage + 1;\r\n        this.props.getLatestMovies(loadPage);\r\n        this.setState({currenPage:loadPage})\r\n        console.log(`The selected Page is ${loadPage}` )\r\n    }\r\n\r\n\r\n    render(){\r\n        const actions =  this.props;\r\n        console.log(`MOVIEBROWSER CONTAINER : Reciev props withh keys  ${Object.keys(actions)}`)\r\n        const movieModal = actions.movieDetails;\r\n        let modalLoad = movieModal.isOpen\r\n        console.log(`movieModal ${movieModal.isOpen}`)\r\n        const topMovies = actions.topMovies\r\n        const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n        let paginationElement;\r\n        \r\n        paginationElement = (\r\n            <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            breakLabel={<span className=\"gap\">...</span>}\r\n            pageCount={this.state.pageCount}\r\n            onPageChange={this.handlePageClick}\r\n            forcePage={this.state.currentPage-1}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"previous_page\"}\r\n            nextLinkClassName={\"next_page\"}\r\n            disabledClassName={\"disabled\"}\r\n            activeClassName={\"active\"}\r\n            />\r\n        );\r\n       \r\n\r\n        return(\r\n        <div className=\"homePage\">\r\n            <div className=\"pageNumber\" style={styles.pageStyle}>\r\n            {paginationElement}\r\n            {this.state.elements}\r\n            </div>\r\n            <Grid>\r\n                <Row>   \r\n                    <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n                </Row>\r\n            </Grid>\r\n            {modalLoad ? <MovieModalContainer /> : console.log(\"Error loading modal\")}\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    //Map nodes in state to properties in component\r\n    (state) => ({\r\n        topMovies : state.movieBrowser.topMoviesReducer,\r\n        movieDetails : state.movieBrowser.movieDetails\r\n    }),\r\n\r\n    //Map action creators to props in component\r\n    {...movieActions}\r\n)(MovieBrowser);","import React, { Component } from \"react\";\r\nimport SliderComp from './SliderComp';\r\nimport Slider from 'infinite-react-carousel';\r\nimport MovieBrowser from '../modules/movie-browser/movie-browser.container';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\n\r\nclass Home extends Component {\r\n    render(){\r\n      const settings = {\r\n        autoplay : true,\r\n        autopalySpeed : 4000,\r\n        pauseOnHover : false\r\n      };\r\n    \r\n      return(\r\n          <div style={{width: \"90%\",height: \"80%\"}} className='container'>\r\n              <Slider { ...settings }>\r\n                  <div>\r\n                    <div class=\"swiper-slide\" style= {{ backgroundImage : \"url(https://image.tmdb.org/t/p/w1280/upUy2QhMZEmtypPW3PdieKLAHxh.jpg)\", width : \"1270\"}} >\r\n                      <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/\" class=\"slide-link\" title=\"Bad Boys for Life (2020)\"> </a>\r\n                      <span class=\"slide-caption\">\r\n                        <h2>Bad Boys for Life</h2>\r\n                        <p class=\"sc-desc\">Marcus Burnett is now a police inspector and Mike Lowery is in a midlife crisis. They unite again when an Albanian mercenary, whose brother they killed, promises them an important bonus....</p>\r\n                          <div class=\"slide-caption-info\">\r\n                                <div class=\"block\"><strong>Genre: </strong>Action, Crime</div>\r\n                                <div class=\"block\"><strong>Duration:</strong> 124 min</div>\r\n                                <div class=\"block\"><strong>Release:</strong> 2020</div>\r\n                                <div class=\"block\"><strong>IMDb:</strong> 7.2</div>\r\n                          </div>\r\n                        <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/10/watching/\">\r\n                          <div class=\"btn btn-successful mt20\">Watching</div>\r\n                        </a>\r\n                      </span> \r\n                    </div>\r\n                    </div>\r\n                  <div>\r\n                  <div>\r\n                    <div class=\"swiper-slide\" style= {{ backgroundImage : \"url(https://image.tmdb.org/t/p/w1280/upUy2QhMZEmtypPW3PdieKLAHxh.jpg)\"}} >\r\n                      <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/\" class=\"slide-link\" title=\"Bad Boys for Life (2020)\"> </a>\r\n                      <span class=\"slide-caption\">\r\n                        <h2>Bad Boys for Life</h2>\r\n                        <p class=\"sc-desc\">Marcus Burnett is now a police inspector and Mike Lowery is in a midlife crisis. They unite again when an Albanian mercenary, whose brother they killed, promises them an important bonus....</p>\r\n                          <div class=\"slide-caption-info\">\r\n                                <div class=\"block\"><strong>Genre: </strong>Action, Crime</div>\r\n                                <div class=\"block\"><strong>Duration:</strong> 124 min</div>\r\n                                <div class=\"block\"><strong>Release:</strong> 2020</div>\r\n                                <div class=\"block\"><strong>IMDb:</strong> 7.2</div>\r\n                          </div>\r\n                        <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/10/watching/\">\r\n                          <div class=\"btn btn-successful mt20\">Watching</div>\r\n                        </a>\r\n                      </span> \r\n                    </div>\r\n                    </div> \r\n                  </div>\r\n                  <div>\r\n                  <div>\r\n                    <div class=\"swiper-slide\" style= {{ backgroundImage : \"url(https://image.tmdb.org/t/p/w1280/upUy2QhMZEmtypPW3PdieKLAHxh.jpg)\"}} >\r\n                      <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/\" class=\"slide-link\" title=\"Bad Boys for Life (2020)\"> </a>\r\n                      <span class=\"slide-caption\">\r\n                        <h2>Bad Boys for Life</h2>\r\n                        <p class=\"sc-desc\">Marcus Burnett is now a police inspector and Mike Lowery is in a midlife crisis. They unite again when an Albanian mercenary, whose brother they killed, promises them an important bonus....</p>\r\n                          <div class=\"slide-caption-info\">\r\n                                <div class=\"block\"><strong>Genre: </strong>Action, Crime</div>\r\n                                <div class=\"block\"><strong>Duration:</strong> 124 min</div>\r\n                                <div class=\"block\"><strong>Release:</strong> 2020</div>\r\n                                <div class=\"block\"><strong>IMDb:</strong> 7.2</div>\r\n                          </div>\r\n                        <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/10/watching/\">\r\n                          <div class=\"btn btn-successful mt20\">Watching</div>\r\n                        </a>\r\n                      </span> \r\n                    </div>\r\n                    </div> \r\n                  </div>\r\n                  <div>\r\n                  <div>\r\n                    <div class=\"swiper-slide\" style= {{ backgroundImage : \"url(https://image.tmdb.org/t/p/w1280/upUy2QhMZEmtypPW3PdieKLAHxh.jpg)\"}} >\r\n                      <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/\" class=\"slide-link\" title=\"Bad Boys for Life (2020)\"> </a>\r\n                      <span class=\"slide-caption\">\r\n                        <h2>Bad Boys for Life</h2>\r\n                        <p class=\"sc-desc\">Marcus Burnett is now a police inspector and Mike Lowery is in a midlife crisis. They unite again when an Albanian mercenary, whose brother they killed, promises them an important bonus....</p>\r\n                          <div class=\"slide-caption-info\">\r\n                                <div class=\"block\"><strong>Genre: </strong>Action, Crime</div>\r\n                                <div class=\"block\"><strong>Duration:</strong> 124 min</div>\r\n                                <div class=\"block\"><strong>Release:</strong> 2020</div>\r\n                                <div class=\"block\"><strong>IMDb:</strong> 7.2</div>\r\n                          </div>\r\n                        <a href=\"https://ww3.fmovie.sc/online/bad-boys-for-life-2020/10/watching/\">\r\n                          <div class=\"btn btn-successful mt20\">Watching</div>\r\n                        </a>\r\n                      </span> \r\n                    </div>\r\n                    </div> \r\n                  </div>\r\n              </Slider>\r\n              \r\n            </div>\r\n            \r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport MovieBrowser from '../modules/movie-browser/movie-browser.movies.container';\r\n\r\nclass Movies extends Component {\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <MuiThemeProvider>\r\n                    <MovieBrowser />\r\n                </MuiThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movies;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid,Row,Col} from 'react-bootstrap';\r\nimport {AppBar, TextField, RaisedButton} from 'material-ui';\r\nimport * as movieActions from './movie-browser.action';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport MovieModalContainer from './movie-modal/movie-modal.container';\r\nimport DummyModal from './movie-modal/movie-modal.dummy';\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst     styles = {\r\n    pageStyle: {\r\n        paddingLeft: 400\r\n    }\r\n}\r\n\r\nclass TVBrowser extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage : 1,\r\n            currentMovies:[],\r\n            showModal : false,\r\n            offset:0,\r\n            data:[],\r\n            elements : [],\r\n            perPage : 32,\r\n            pageCount:20   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //window.onscroll = this.scrollHandle;\r\n        \r\n        console.log(`Component Did mount`)\r\n        console.log(`mounting currentpage ${this.state.currentPage}`)\r\n        this.props.getLatestTVShows(this.state.currentPage);\r\n        this.setState({\r\n            showModal :true\r\n        })\r\n    }\r\n\r\n    scrollHandle() {\r\n        const {topMovies} = this.props;\r\n        if(!topMovies.isLoading){\r\n            let percentageScrolled = scrollHelpers.getScroolDownPercentage(window);\r\n            if(percentageScrolled > .8){\r\n                const nextPage = this.state.currentPage + 1;\r\n                this.props.getLatestTVShows(nextPage);\r\n                this.setState({currentPage: nextPage});\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePageClick =(data) => {\r\n        const selectedPage = data.selected;\r\n        const loadPage = selectedPage + 1;\r\n        this.props.getLatestTVShows(loadPage);\r\n        this.setState({currenPage:loadPage})\r\n        console.log(`The selected Page is ${loadPage}` )\r\n    }\r\n\r\n\r\n    render(){\r\n        const actions =  this.props;\r\n        console.log(`MOVIEBROWSER CONTAINER : Reciev props withh keys  ${Object.keys(actions)}`)\r\n        const movieModal = actions.movieDetails;\r\n        let modalLoad = movieModal.isOpen\r\n        console.log(`movieModal ${movieModal.isOpen}`)\r\n        const topMovies = actions.topMovies\r\n        const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n        let paginationElement;\r\n        \r\n        paginationElement = (\r\n            <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            breakLabel={<span className=\"gap\">...</span>}\r\n            pageCount={this.state.pageCount}\r\n            onPageChange={this.handlePageClick}\r\n            forcePage={this.state.currentPage-1}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"previous_page\"}\r\n            nextLinkClassName={\"next_page\"}\r\n            disabledClassName={\"disabled\"}\r\n            activeClassName={\"active\"}\r\n            />\r\n        );\r\n       \r\n\r\n        return(\r\n        <div className=\"homePage\">\r\n            <div className=\"pageNumber\" style={styles.pageStyle}>\r\n            {paginationElement}\r\n            {this.state.elements}\r\n            </div>\r\n            <Grid>\r\n                <Row>   \r\n                    <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n                </Row>\r\n            </Grid>\r\n            {modalLoad ? <MovieModalContainer /> : console.log(\"Error loading modal\")}\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    //Map nodes in state to properties in component\r\n    (state) => ({\r\n        topMovies : state.movieBrowser.topMoviesReducer,\r\n        movieDetails : state.movieBrowser.movieDetails\r\n    }),\r\n\r\n    //Map action creators to props in component\r\n    {...movieActions}\r\n)(TVBrowser);","import React, { Component } from \"react\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport TVBrowser from '../modules/movie-browser/movie-browser.tvshows.container';\r\n\r\nclass TVSeries extends Component {\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <MuiThemeProvider>\r\n                    <TVBrowser />\r\n                </MuiThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TVSeries;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid,Row,Col} from 'react-bootstrap';\r\nimport {AppBar, TextField, RaisedButton} from 'material-ui';\r\nimport * as movieActions from './movie-browser.action';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport ReactPaginate from 'react-paginate'\r\nconst     styles = {\r\n    pageStyle: {\r\n        paddingLeft: 400\r\n    }\r\n}\r\n\r\nclass MovieTopIMDB extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage : 1,\r\n            currentMovies:[],\r\n            showModal : false,\r\n            offset:0,\r\n            data:[],\r\n            elements : [],\r\n            perPage : 32,\r\n            pageCount:20   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //window.onscroll = this.scrollHandle;\r\n        \r\n        console.log(`Component Did mount`)\r\n        console.log(`mounting currentpage ${this.state.currentPage}`)\r\n        this.props.getTopMovies(this.state.currentPage);\r\n        this.setState({\r\n            showModal :true\r\n        })\r\n    }\r\n\r\n    scrollHandle() {\r\n        const {topMovies} = this.props;\r\n        if(!topMovies.isLoading){\r\n            let percentageScrolled = scrollHelpers.getScroolDownPercentage(window);\r\n            if(percentageScrolled > .8){\r\n                const nextPage = this.state.currentPage + 1;\r\n                this.props.getTopMovies(nextPage);\r\n                this.setState({currentPage: nextPage});\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePageClick =(data) => {\r\n        const selectedPage = data.selected;\r\n        const loadPage = selectedPage + 1;\r\n        this.props.getTopMovies(loadPage);\r\n        this.setState({currenPage:loadPage})\r\n        console.log(`The selected Page is ${loadPage}` )\r\n    }\r\n\r\n\r\n    render(){\r\n        const actions =  this.props;\r\n        console.log(`MOVIEBROWSER CONTAINER : Reciev props withh keys  ${Object.keys(actions)}`)\r\n        //const movieModal = actions.movieDetails;\r\n        //let modalLoad = movieModal.isOpen\r\n        //console.log(`movieModal ${movieModal.isOpen}`)\r\n        const topMovies = actions.topMovies\r\n        const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n        let paginationElement;\r\n        \r\n        paginationElement = (\r\n            <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            breakLabel={<span className=\"gap\">...</span>}\r\n            pageCount={this.state.pageCount}\r\n            onPageChange={this.handlePageClick}\r\n            forcePage={this.state.currentPage-1}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"previous_page\"}\r\n            nextLinkClassName={\"next_page\"}\r\n            disabledClassName={\"disabled\"}\r\n            activeClassName={\"active\"}\r\n            />\r\n        );\r\n       \r\n\r\n        return(\r\n        <div className=\"homePage\">\r\n            <div className=\"pageNumber\" style={styles.pageStyle}>\r\n            {paginationElement}\r\n            {this.state.elements}\r\n            </div>\r\n            <Grid>\r\n                <Row>   \r\n                    <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n                </Row>\r\n            </Grid>\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    //Map nodes in state to properties in component\r\n    (state) => ({\r\n        topMovies : state.movieBrowser.topMoviesReducer,\r\n        movieDetails : state.movieBrowser.movieDetails\r\n    }),\r\n\r\n    //Map action creators to props in component\r\n    {...movieActions}\r\n)(MovieTopIMDB);","import React, { Component } from \"react\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport MovieTopIMDB from '../modules/movie-browser/movie-browser.topimdb.container';\r\n\r\nclass TopIMDB extends Component {\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <MuiThemeProvider>\r\n                    <MovieTopIMDB />\r\n                </MuiThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopIMDB;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid,Row,Col} from 'react-bootstrap';\r\nimport {AppBar, TextField, RaisedButton} from 'material-ui';\r\nimport * as movieActions from './movie-browser.action';\r\nimport * as movieHelpers from './movie-browser.helpers';\r\nimport * as scrollHelpers from '../common/scroll.helpers';\r\nimport MovieList from './movie-list/movie-list.component';\r\nimport MovieModalContainer from './movie-modal/movie-modal.container';\r\nimport DummyModal from './movie-modal/movie-modal.dummy';\r\nimport ReactPaginate from 'react-paginate'\r\n\r\nconst     styles = {\r\n    pageStyle: {\r\n        paddingLeft: 400\r\n    }\r\n}\r\n\r\nclass MoviesTrending extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage : 1,\r\n            currentMovies:[],\r\n            showModal : false,\r\n            offset:0,\r\n            data:[],\r\n            elements : [],\r\n            perPage : 32,\r\n            pageCount:20   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //window.onscroll = this.scrollHandle;\r\n        \r\n        console.log(`Component Did mount`)\r\n        console.log(`mounting currentpage ${this.state.currentPage}`)\r\n        this.props.getTrending(this.state.currentPage);\r\n        this.setState({\r\n            showModal :true\r\n        })\r\n    }\r\n\r\n    scrollHandle() {\r\n        const {topMovies} = this.props;\r\n        if(!topMovies.isLoading){\r\n            let percentageScrolled = scrollHelpers.getScroolDownPercentage(window);\r\n            if(percentageScrolled > .8){\r\n                const nextPage = this.state.currentPage + 1;\r\n                this.props.getTrending(nextPage);\r\n                this.setState({currentPage: nextPage});\r\n            }\r\n        }\r\n    }\r\n\r\n    handlePageClick =(data) => {\r\n        const selectedPage = data.selected;\r\n        const loadPage = selectedPage + 1;\r\n        this.props.getTrending(loadPage);\r\n        this.setState({currenPage:loadPage})\r\n        console.log(`The selected Page is ${loadPage}` )\r\n    }\r\n\r\n\r\n    render(){\r\n        const actions =  this.props;\r\n        console.log(`MOVIEBROWSER CONTAINER : Reciev props withh keys  ${Object.keys(actions)}`)\r\n        const movieModal = actions.movieDetails;\r\n        //let modalLoad = movieModal.isOpen\r\n        console.log(`movieModal ${movieModal.isOpen}`)\r\n        const topMovies = actions.topMovies\r\n        const movies = movieHelpers.getMoviesList(topMovies.response);\r\n\r\n        let paginationElement;\r\n        \r\n        paginationElement = (\r\n            <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            breakLabel={<span className=\"gap\">...</span>}\r\n            pageCount={this.state.pageCount}\r\n            onPageChange={this.handlePageClick}\r\n            forcePage={this.state.currentPage-1}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"previous_page\"}\r\n            nextLinkClassName={\"next_page\"}\r\n            disabledClassName={\"disabled\"}\r\n            activeClassName={\"active\"}\r\n            />\r\n        );\r\n       \r\n\r\n        return(\r\n        <div className=\"homePage\">\r\n            <div className=\"pageNumber\" style={styles.pageStyle}>\r\n            {paginationElement}\r\n            {this.state.elements}\r\n            </div>\r\n            <Grid>\r\n                <Row>   \r\n                    <MovieList movies={movies} isLoading={topMovies.isLoading} />\r\n                </Row>\r\n            </Grid>\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    //Map nodes in state to properties in component\r\n    (state) => ({\r\n        topMovies : state.movieBrowser.topMoviesReducer,\r\n        movieDetails : state.movieBrowser.movieDetails\r\n    }),\r\n\r\n    //Map action creators to props in component\r\n    {...movieActions}\r\n)(MoviesTrending);","import React, { Component } from \"react\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport MoviesTrending from '../modules/movie-browser/movie-browser.trending.container';\r\n\r\nclass Trending extends Component {\r\n    render(){\r\n        return(\r\n            <div className='container'>\r\n                <MuiThemeProvider>\r\n                    <MoviesTrending />\r\n                </MuiThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Trending;","import React from 'react'\r\nimport ButtonBase from '@material-ui/core/ButtonBase';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n    \r\n}\r\n\r\nconst CommentsComp = (comments) => {\r\n    let commentsDiv =null;\r\n    console.log(`Comments received is ${Object.keys(comments.comments)}`)\r\n        if(comments.comments!==null){\r\n            commentsDiv = comments.comments.map(comment => \r\n                (<div><ListItem alignItems=\"flex-start\">\r\n                        <ListItemAvatar>\r\n                            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n                        </ListItemAvatar>\r\n                        <ListItemText\r\n                        primary={<React.Fragment>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\" \r\n                                style={{                                   \r\n                                    fontWeight: \"400\",\r\n                                    fontSize: \"1.2rem\"\r\n                                }}      \r\n                            >\r\n                                {comment.author}\r\n                            </Typography>\r\n                            </React.Fragment>\r\n}\r\n                        secondary={\r\n                            <React.Fragment>\r\n                            <Typography\r\n                                component=\"span\"\r\n                                variant=\"body2\" \r\n                                style={{\r\n                                    color: \"#848484\",\r\n                                    fontWeight: \"400\",\r\n                                    fontSize: \"1.2rem\"\r\n                                }}      \r\n                            >\r\n                                {comment.content}\r\n                            </Typography>\r\n\r\n                            </React.Fragment>\r\n                        }\r\n                        />\r\n                    </ListItem>\r\n                    <Divider variant=\"inset\" component=\"li\" /></div>))\r\n        }\r\n        \r\n\r\n        return(\r\n            <List >\r\n                {commentsDiv}\r\n            </List>\r\n        )\r\n\r\n}\r\n\r\nexport default CommentsComp","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as movieHelpers from \"../movie-browser.helpers\";\r\nimport ReactPlayer from \"react-player\";\r\nimport LoaderComponent from \"../../common/loader.component\";\r\nimport CommentsComp from \"./movie-page.comments\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"infinite-react-carousel\";\r\nimport { Row, Col } from \"react-bootstrap\";\r\nimport MovieCard from \"../movie-card/movie-card.component\";\r\nconst styles = {\r\n  movieContainer: {\r\n    paddingTop: \"50px\",\r\n    paddingLeft: \"50px\",\r\n    paddingRight: \"50px\",\r\n    backgroundColor: \"#f1f1f1\",\r\n  },\r\n  videoOptions: {\r\n    paddingTop: \"20\",\r\n  },\r\n  content: {\r\n    width: \"calc(100%-340px)\",\r\n    float: \"left\",\r\n    position: \"relative\",\r\n  },\r\n  dooplayPlayerH2: {\r\n    fontSize: \"18px\",\r\n    fontWeight: \"500\",\r\n    width: \"100%\",\r\n    float: \"left\",\r\n    paddingTop: \"20px\",\r\n    background: \"0 0 0 0.7\",\r\n  },\r\n  options: {\r\n    padding: \"0 25px\",\r\n    float: \"left\",\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  playeroption: {\r\n    float: \"left\",\r\n    width: \"100%\",\r\n\r\n    fontWeight: \"500\",\r\n    cursor: \"pointer\",\r\n    lineHeight: \"20px\",\r\n  },\r\n  mveImg: {\r\n    width: \"150px\",\r\n    height: \"200px\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  details: {\r\n    paddingTop: \"20px\",\r\n  },\r\n  mveName: {\r\n    display: \"inline\",\r\n    marginTop: \"10px\",\r\n    paddingTop: \"20px\",\r\n    color: \"#00acc1\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1.8rem\",\r\n  },\r\n  heading: {\r\n    display: \"inline\",\r\n    marginTop: \"10px\",\r\n    paddingTop: \"20px\",\r\n    paddingLeft: \"20px\",\r\n    color: \"#00acc1\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"2.8rem\",\r\n  },\r\n  linkText: {\r\n    color: \"#848484\",\r\n    fontWeight: \"400\",\r\n    fontSize: \"1.3rem\",\r\n  },\r\n  videoContainer: {\r\n    width: \"100%\",\r\n  },\r\n};\r\n\r\nclass MoviePage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      urlPlay: \"\",\r\n      movieImg: \"\",\r\n      playClicked: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const settings = {\r\n      autoplay: false,\r\n      autopalySpeed: 4000,\r\n      pauseOnHover: false,\r\n    };\r\n\r\n    let details = this.props.details;\r\n    let comments = this.props.comments;\r\n    let video = this.props.videos;\r\n    let similar = this.props.similar;\r\n    let credits = this.props.credits;\r\n    let similarMovies;\r\n    let detailsLoading = this.props.details.isLoading;\r\n    let commentsLoading = this.props.comments.isLoading;\r\n    let videoLoading = this.props.videos.isLoading;\r\n    let similarLoading = this.props.similar.isLoading;\r\n    let creditsLoading = this.props.credits.isLoading;\r\n\r\n    let movieTitle,\r\n      movieOverview,\r\n      releaseDate,\r\n      director,\r\n      actors,\r\n      language,\r\n      country,\r\n      rating,\r\n      releasedate,\r\n      imdb_id,\r\n      status = \"Not Loaded\";\r\n    let mveCast = \"Not Loaded\";\r\n    let mveCrew = \"Not Loaded\";\r\n    let genres = [\"Not Loaded\"];\r\n    let videosDiv = \" Not loaded\";\r\n    let movieImgLinkFull = \"\";\r\n    let videoDefaultPlay = \"\";\r\n\r\n    let loader = true;\r\n    if (\r\n      detailsLoading === false &&\r\n      commentsLoading === false &&\r\n      videoLoading === false &&\r\n      similarLoading === false &&\r\n      creditsLoading === false\r\n    )\r\n      loader = false;\r\n\r\n    if (detailsLoading === false && details.response !== null) {\r\n      const movieDetails = details.response.results[0];\r\n      movieTitle = movieDetails.title;\r\n      movieOverview = movieDetails.overview;\r\n      releaseDate = movieDetails.release_date;\r\n      let genresListA = movieDetails.genres;\r\n      let genresList = genresListA.map((genreinfo) => genreinfo.name);\r\n      genres = genresList.map((genre) => `${genre},`);\r\n      if (genres.indexOf(\",\") === genres.length) {\r\n        genres = genres.substring(0, genres.length - 1);\r\n      }\r\n      let movieImgLink = movieDetails.poster_path;\r\n      movieImgLinkFull = `https://image.tmdb.org/t/p/w400${movieImgLink}`;\r\n      rating = movieDetails.vote_average;\r\n      releasedate = movieDetails.release_date;\r\n      status = movieDetails.status;\r\n      imdb_id = movieDetails.imdb_id;\r\n    }\r\n    //video.response !== null\r\n    if (video.response !== null && videoLoading === false) {\r\n      let x;\r\n      let videoKeysIds;\r\n\r\n      videoDefaultPlay =\r\n        video.response.results[0] !== undefined\r\n          ? \"https://www.youtube.com/watch?v=\" + video.response.results[0].key\r\n          : null;\r\n\r\n      videosDiv = video.response.results.map((videoInfo) => {\r\n        let videoKey = videoInfo.key;\r\n        let videoId = videoInfo.id;\r\n        let videoType = videoInfo.type;\r\n        let typeName = videoInfo.name;\r\n        let site = videoInfo.site;\r\n\r\n        return (\r\n          <Row\r\n            key={videoId}\r\n            style={styles.playeroption}\r\n            onClick={() => {\r\n              this.setState({\r\n                playClicked: true,\r\n                urlPlay: \"https://www.youtube.com/watch?v=\" + videoKey,\r\n              });\r\n            }}\r\n          >\r\n            <i class=\"icon-play3\"></i>\r\n            <span class=\"title\" style={styles.linkText}>\r\n              Watch {videoType} - {typeName}\r\n            </span>\r\n            <span\r\n              className=\"float-left\"\r\n              style={{\r\n                float: \"right\",\r\n                color: \"#848484\",\r\n                fontWeight: \"400\",\r\n                fontSize: \"1rem\",\r\n              }}\r\n            >\r\n              {site}\r\n            </span>\r\n          </Row>\r\n        );\r\n      });\r\n    }\r\n\r\n    if (credits.response !== null && creditsLoading === false) {\r\n      mveCast = credits.response.results[0].cast.map((cst, id) => {\r\n        if (id <= 6) return `${cst.name}, `;\r\n      });\r\n\r\n      mveCrew = credits.response.results[0].crew.map((crw) => {\r\n        if (crw.job === \"Director\") return `${crw.name},`;\r\n      });\r\n    }\r\n    console.log(\"url plays \" + videoDefaultPlay);\r\n    let cr1, cr2;\r\n    if (similar.response !== null && similarLoading === false) {\r\n      similarMovies = movieHelpers.getMoviesList(similar.response);\r\n\r\n      cr1 = similarMovies.map((movie, id) => {\r\n        if (id < 4) {\r\n          return (\r\n            <Col key={movie.id} xs={12} sm={4} md={3} lg={3}>\r\n              <MovieCard movie={movie} />\r\n            </Col>\r\n          );\r\n        }\r\n      });\r\n\r\n      cr2 = similarMovies.map((movie, id) => {\r\n        if (id >= 4 && id <= 7) {\r\n          return (\r\n            <Col key={movie.id} xs={12} sm={4} md={3} lg={3}>\r\n              <MovieCard movie={movie} />\r\n            </Col>\r\n          );\r\n        }\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <Grid>\r\n          <LoaderComponent isLoading={loader} />\r\n        </Grid>\r\n\r\n        <Grid>\r\n          {this.state.playClicked === true ? (\r\n            <ReactPlayer\r\n              url={this.state.urlPlay}\r\n              playing\r\n              width=\"100%\"\r\n              height=\"500px\"\r\n            />\r\n          ) : (\r\n            <ReactPlayer url={videoDefaultPlay} width=\"100%\" height=\"500px\" />\r\n          )}\r\n        </Grid>\r\n        <div className=\"content\" style={styles.content}>\r\n          <div style={styles.dooplayPlayer}>\r\n            <Typography style={styles.heading}>Video Sources</Typography>\r\n            <div style={styles.options}>\r\n              <div style={styles.playerotionsul}>\r\n                <Grid>{videosDiv}</Grid>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Paper>\r\n          <Grid container spacing={16}>\r\n            <Grid item>\r\n              <img style={styles.mveImg} alt=\"complex\" src={movieImgLinkFull} />\r\n            </Grid>\r\n            <Grid item xs={12} sm container>\r\n              <Grid item xs container direction=\"column\" spacing={16}>\r\n                <Grid item xs style={{ paddingLeft: \"30px\" }}>\r\n                  <Typography\r\n                    style={styles.mveName}\r\n                    gutterBottom\r\n                    variant=\"subtitle1\"\r\n                  >\r\n                    {movieTitle}\r\n                  </Typography>\r\n                  <Typography gutterBottom>TMDb {rating}</Typography>\r\n                  <Typography color=\"textSecondary\">{movieOverview}</Typography>\r\n                  <Typography gutterBottom>Genre : {genres}</Typography>\r\n                  <Typography gutterBottom>Stars : {mveCast}</Typography>\r\n                  <Typography gutterBottom>Director : {mveCrew}</Typography>\r\n                  <Typography gutterBottom>\r\n                    Release Date : {releasedate}\r\n                  </Typography>\r\n                  <Typography gutterBottom>\r\n                    <Link href={`https://www.imdb.com/title/${imdb_id}`}>\r\n                      IMDb Link\r\n                    </Link>\r\n                  </Typography>\r\n                  <Typography gutterBottom>\r\n                    Release Status : {status}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"subtitle1\"></Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n\r\n        <Paper style={{ marginTop: \"60px\" }}>\r\n          <Grid>\r\n            <Row>\r\n              <Typography style={styles.heading}>COMMENTS</Typography>\r\n            </Row>\r\n            <Row>\r\n              {commentsLoading === false && comments.response !== null ? (\r\n                <CommentsComp comments={comments.response.results} />\r\n              ) : null}\r\n            </Row>\r\n          </Grid>\r\n        </Paper>\r\n        <Paper style={{ marginTop: \"60px\" }}>\r\n          <Grid>\r\n            <Row>\r\n              <Typography style={styles.heading}>\r\n                YOU MIGHT ALSO LIKE\r\n              </Typography>\r\n            </Row>\r\n            <Row>\r\n              <Slider style={{ paddingLeft: \"20px\" }} {...settings}>\r\n                <Grid>\r\n                  <Row>{cr1}</Row>\r\n                </Grid>\r\n                <Grid>\r\n                  <Row>{cr2}</Row>\r\n                </Grid>\r\n              </Slider>\r\n            </Row>\r\n          </Grid>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nMoviePage.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default connect((state) => ({\r\n  movieDetails: state.movieBrowser.movieDetails,\r\n  details: state.movieBrowser.movieDetails.details,\r\n  videos: state.movieBrowser.movieDetails.videos,\r\n  comments: state.movieBrowser.movieDetails.comments,\r\n  similar: state.movieBrowser.movieDetails.similar,\r\n  credits: state.movieBrowser.movieDetails.credits,\r\n}))(MoviePage);\r\n","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport MoviePageLayout from './movie-page.moviepage';\r\nimport {getDetails,getMovieVideos,getSimilarMovies,getMovieComments,getMovieCredits} from '../movie-page/movie-page.action';\r\n\r\nclass MoviePage extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.getDetails(parseInt(this.props.movieId))\r\n        this.props.getMovieVideos(parseInt(this.props.movieId))\r\n        this.props.getSimilarMovies(parseInt(this.props.movieId))\r\n        this.props.getMovieComments(parseInt(this.props.movieId))\r\n        this.props.getMovieCredits(parseInt(this.props.movieId))\r\n    }\r\n\r\n    \r\n    render(){        \r\n        const movie_id = this.props.movieId\r\n        const movie_params = this.props.movie_params\r\n        console.log(`Movie id in page container is ${movie_id} ${movie_params}`)\r\n\r\n        return(\r\n            <div>\r\n                <MoviePageLayout />     \r\n            </div>\r\n        )\r\n    }    \r\n}\r\n\r\nexport default connect(\r\n    (state) => ({\r\n        movieDetails    : state.movieBrowser.movieDetails,\r\n        details         : state.movieBrowser.movieDetails.details,\r\n        videos          : state.movieBrowser.movieDetails.videos,\r\n        comments        : state.movieBrowser.movieDetails.comments,\r\n        similar         : state.movieBrowser.movieDetails.similar,\r\n        credits         : state.movieBrowser.movieDetails.credits    \r\n    }),{getDetails,getMovieVideos,getSimilarMovies,getMovieComments,getMovieCredits}\r\n) (MoviePage);","import React, { Component } from \"react\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport MoviePage from '../modules/movie-browser/movie-page/movie-page.container';\r\n\r\nclass Page extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const movieId = this.props.match.params.movieId\r\n        const movie_params = this.props.location.param1\r\n        return(\r\n            <div className='container'>\r\n                <MuiThemeProvider>\r\n                    <MoviePage movieId={movieId} movie_params={movie_params}/>\r\n                </MuiThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Grid,Row,Col} from 'react-bootstrap';\r\nimport{searchMovies,searchSeries} from '../movie-browser.action';\r\nimport * as movieHelpers from '../movie-browser.helpers';\r\nimport MovieList from '../movie-list/movie-list.component';\r\nimport ReactPaginate from 'react-paginate'\r\nconst     styles = {\r\n    pageStyle: {\r\n        paddingLeft: 400\r\n    }\r\n}\r\n\r\nclass SearchPage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            currentPage : 1,\r\n            currentMovies:[],\r\n            showModal : false,\r\n            offset:0,\r\n            data:[],\r\n            elements : [],\r\n            perPage : 32,\r\n            pageCount:20   \r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        //window.onscroll = this.scrollHandle;\r\n        this.props.searchMovies(this.props.query,1)\r\n        this.props.searchSeries(this.props.query,1)        \r\n    }\r\n\r\n\r\n    handlePageClick =(data) => {\r\n        const selectedPage = data.selected;\r\n        const loadPage = selectedPage + 1;\r\n        this.props.searchMovies(loadPage);\r\n        this.props.searchSeries(loadPage);\r\n        this.setState({currenPage:loadPage})\r\n        console.log(`The selected Page is ${loadPage}` )\r\n    }\r\n\r\n\r\n    render(){\r\n        const actions =  this.props;\r\n        console.log(`MOVIEBROWSER CONTAINER : Reciev props withh keys  ${Object.keys(actions)}`)\r\n\r\n        const movies = movieHelpers.getMoviesList(this.props.movieSearch.response);\r\n        const series = movieHelpers.getMoviesList(this.props.seriesSearch.response);\r\n\r\n        let paginationElement;\r\n        \r\n        paginationElement = (\r\n            <ReactPaginate\r\n            previousLabel={\"← Previous\"}\r\n            nextLabel={\"Next →\"}\r\n            breakLabel={<span className=\"gap\">...</span>}\r\n            pageCount={this.state.pageCount}\r\n            onPageChange={this.handlePageClick}\r\n            forcePage={this.state.currentPage-1}\r\n            containerClassName={\"pagination\"}\r\n            previousLinkClassName={\"previous_page\"}\r\n            nextLinkClassName={\"next_page\"}\r\n            disabledClassName={\"disabled\"}\r\n            activeClassName={\"active\"}\r\n            />\r\n        );\r\n       \r\n\r\n        return(\r\n        <div className=\"homePage\">\r\n            \r\n            <Grid>\r\n                <Row>   \r\n                    <MovieList movies={movies} isLoading={this.props.movieSearch.isLoading} />\r\n                    <MovieList movies={series} isLoading={this.props.seriesSearch.isLoading} />\r\n                </Row>\r\n            </Grid>\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(\r\n    //Map nodes in state to properties in component\r\n    (state) => ({\r\n        movieSearch :  state.movieBrowser.searchResponse.movieSearch,\r\n        seriesSearch    :   state.movieBrowser.searchResponse.seriesSearch,\r\n    }),\r\n\r\n    //Map action creators to props in component\r\n    {searchMovies,searchSeries}\r\n)(SearchPage);","import React, { Component } from \"react\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport SearchPage from \"../modules/movie-browser/movie-search/movie-search.container\";\r\n\r\nclass Search extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        const query = this.props.match.params.searchKey\r\n        return(\r\n            <div className='container'>\r\n                <MuiThemeProvider>\r\n                   <SearchPage query={query} />\r\n                </MuiThemeProvider>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Search;","import React, { Component } from \"react\";\r\nimport NavigationBar from \"./NavigationBar\";\r\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Movies from \"./Movies\";\r\nimport TVSeries from \"./TVSeries\";\r\nimport TopIMDB from \"./TopIMDB\";\r\nimport Trending from \"./Trending\";\r\nimport Page from \"./Page\";\r\nimport Search from \"./Search\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <NavigationBar />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return <Redirect to=\"/Trending\" />;\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/SMovies\"\r\n            render={() => {\r\n              return <Redirect to=\"/Trending\" />;\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/SMovies/\"\r\n            render={() => {\r\n              return <Redirect to=\"/Trending\" />;\r\n            }}\r\n          />\r\n          <Route exact path=\"/Trending\" component={Trending} />\r\n          <Route exact path=\"/Movies\" component={Movies} />\r\n          <Route exact path=\"/TVSeries\" component={TVSeries} />\r\n          <Route exact path=\"/TopIMDB\" component={TopIMDB} />\r\n          <Route path=\"/movie/:movieId\" component={Page} />\r\n          <Route path=\"/search/:searchKey\" component={Search} />\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDom from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nimport App from './components/App'\nimport * as serviceWorker  from './serviceWorker'\n//thunk is used for asynchronous actions\n\n\nReactDom.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\nserviceWorker.unregister();"],"sourceRoot":""}